{"map":"{\"version\":3,\"sources\":[\"/Users/kataokayuutarou/go/src/chat-tool/app/node_modules/file-loader/dist/cjs.js??ref--6-oneOf-7!/Users/kataokayuutarou/go/src/chat-tool/app/src/logo.svg\",\"/Users/kataokayuutarou/go/src/chat-tool/app/src/components/Message.js\",\"/Users/kataokayuutarou/go/src/chat-tool/app/src/components/Login.js\",\"/Users/kataokayuutarou/go/src/chat-tool/app/src/App.js\",\"/Users/kataokayuutarou/go/src/chat-tool/app/src/serviceWorker.js\",\"/Users/kataokayuutarou/go/src/chat-tool/app/src/index.js\"],\"names\":[\"module\",\"exports\",\"__webpack_require__\",\"p\",\"Message\",\"react_default\",\"a\",\"createElement\",\"className\",\"this\",\"props\",\"message\",\"name\",\"timestamp\",\"text\",\"Component\",\"Login\",\"id\",\"onSubmit\",\"participantSubmit\",\"type\",\"placeholder\",\"socket\",\"App\",\"_this\",\"Object\",\"classCallCheck\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"state\",\"init\",\"participants\",\"messages\",\"bind\",\"assertThisInitialized\",\"textSubmit\",\"e\",\"preventDefault\",\"input\",\"document\",\"getElementById\",\"value\",\"location\",\"host\",\"url\",\"concat\",\"protocol\",\"replace\",\"WebSocket\",\"onopen\",\"event\",\"console\",\"log\",\"onerror\",\"setState\",\"send\",\"JSON\",\"stringify\",\"Date\",\"toLocaleTimeString\",\"_this2\",\"scrollTop\",\"scrollHeight\",\"onmessage\",\"data\",\"parse\",\"toConsumableArray\",\"Login_Login\",\"style\",\"width\",\"height\",\"length\",\"map\",\"participant\",\"Message_Message\",\"Boolean\",\"window\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App_0\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"module.exports = __webpack_public_path__ + \\\"static/media/logo.5d5d9eef.svg\\\";\",\"import React, { Component } from 'react';\\nimport ReactDOM from 'react-dom';\\n\\nimport '../styles/Message.css';\\n\\nexport default class Message extends Component {\\n    render() {\\n        return (\\n            <div className=\\\"message\\\" >\\n                <div className=\\\"message-top\\\">\\n                    <span className=\\\"client-name\\\">{this.props.message.name}</span>\\n                    <span className=\\\"timestamp\\\">{this.props.message.timestamp}</span>\\n                </div>\\n                <div className=\\\"message-text\\\">\\n                    {this.props.message.text}\\n                </div>\\n            </div>\\n        );\\n    }\\n}\\n\\n\",\"import React, { Component } from 'react';\\nimport ReactDOM from 'react-dom';\\n\\nimport '../styles/Login.css';\\n\\nexport default class Login extends Component {\\n    render() {\\n        return (\\n            <div id=\\\"init\\\">\\n                <form onSubmit={this.props.participantSubmit}>\\n                    <input type=\\\"text\\\"\\n                        placeholder=\\\"Enter name here...\\\"\\n                        id=\\\"participant-form\\\" />\\n                </form>\\n            </div>\\n        );\\n    }\\n\\n}\\n\\n\",\"import React, { Component } from 'react';\\nimport ReactDOM from 'react-dom';\\nimport Message from './components/Message';\\nimport Login from './components/Login';\\nimport logo from './logo.svg';\\nimport './App.css';\\n\\nlet socket = null;\\nconst isDevelopment = process.env.NODE_ENV === 'development'\\n\\nclass App extends Component {\\n    constructor(props) {\\n        super(props);\\n\\n        this.state = {\\n            init: true,\\n            participants: [],\\n            messages: [],\\n            name: \\\"\\\",\\n        };\\n\\n        this.participantSubmit = this.participantSubmit.bind(this);\\n        this.textSubmit = this.textSubmit.bind(this);\\n    }\\n\\n    participantSubmit(e) {\\n        e.preventDefault();\\n        const input = document.getElementById(\\\"participant-form\\\").value;\\n        if (input === \\\"\\\") {\\n            return;\\n        }\\n\\n        const location = isDevelopment ? 'localhost:8081' : document.location.host;\\n        const url = `${document.location.protocol.replace(\\\"http\\\", \\\"ws\\\")}//${location}/ws?name=${input}`;\\n        // init client websocket\\n        socket = new WebSocket(url);\\n        socket.onopen = (event) => {\\n            console.log('Opened socket');\\n        };\\n        socket.onerror = (event) => {\\n            console.log(event);\\n        }\\n        this.setState({\\n            init: false,\\n            name: input,\\n            participants: [],\\n        });\\n    }\\n\\n    textSubmit(e) {\\n        e.preventDefault();\\n        const input = document.getElementById(\\\"text-entry-input\\\").value;\\n        if (input === \\\"\\\") {\\n            return;\\n        }\\n\\n        // send message request to server\\n        socket.send(JSON.stringify({\\n            text: input,\\n            name: this.state.name,\\n            timestamp: new Date().toLocaleTimeString(),\\n        }));\\n\\n        document.getElementById(\\\"text-entry-input\\\").value = \\\"\\\";\\n    }\\n\\n    componentDidUpdate() {\\n        if (!this.state.init) {\\n            // keep message box scrolled appropriately with new messages\\n            document.getElementById(\\\"conversation-main\\\").scrollTop = document.getElementById(\\\"conversation-main\\\").scrollHeight;\\n\\n            console.log(\\\"componentDidUpdate\\\")\\n            socket.onmessage = (event) => {\\n                console.log(event);\\n                const data = JSON.parse(event.data);\\n                console.log(data);\\n                if (!data.text) { // client added\\n                    this.setState({\\n                        participants: data\\n                    });\\n                } else { // message added\\n                    const { text, name, timestamp } = data;\\n\\n                    this.setState({\\n                        messages: [\\n                            ...this.state.messages,\\n                            {\\n                                text,\\n                                name,\\n                                timestamp,\\n                            }\\n                        ],\\n                    });\\n                }\\n            }\\n        }\\n    }\\n\\n    render() {\\n        return (\\n            <div id=\\\"main\\\">\\n                <div id=\\\"title\\\">\\n                    Chat Tool\\n                </div>\\n                {this.state.init &&\\n                    <div id=\\\"box-init\\\">\\n                        <Login participantSubmit={this.participantSubmit} />\\n                    </div>\\n                }\\n                {!this.state.init &&\\n                    <div id=\\\"box-main\\\">\\n                        <div style={{ width: \\\"100%\\\", height: \\\"100%\\\" }}>\\n                            <div id=\\\"top\\\">\\n                                <div id=\\\"participants-main\\\">\\n                                    <b>{`Participants (${this.state.participants.length}):`}</b>\\n                                    {this.state.participants.map(participant =>\\n                                        <div>{participant}</div>\\n                                    )}\\n                                </div>\\n                                <div id=\\\"conversation-main\\\">\\n                                    {this.state.messages.map(message =>\\n                                        <Message message={message} />\\n                                    )}\\n                                </div>\\n                            </div>\\n                            <div id=\\\"bottom\\\">\\n                                <div id=\\\"text-entry-main\\\">\\n                                    <form onSubmit={this.textSubmit} id=\\\"text-entry-form\\\">\\n                                        <input type=\\\"text\\\" id=\\\"text-entry-input\\\" />\\n                                    </form>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                }\\n            </div>\\n        );\\n    }\\n\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[,,,,,,,,,,function(t,e,n){t.exports=n(21)},,,,,,function(t,e,n){},function(t,e,n){},function(t,e,n){},function(t,e,n){t.exports=n.p+\"static/media/logo.5d5d9eef.svg\"},function(t,e,n){},function(t,e,n){\"use strict\";n.r(e);var a=n(0),i=n.n(a),c=n(6),o=n.n(c),s=(n(16),n(9)),r=n(1),m=n(2),l=n(4),p=n(3),u=n(7),d=n(5),v=(n(17),function(t){function e(){return Object(r.a)(this,e),Object(l.a)(this,Object(p.a)(e).apply(this,arguments))}return Object(d.a)(e,t),Object(m.a)(e,[{key:\"render\",value:function(){return i.a.createElement(\"div\",{className:\"message\"},i.a.createElement(\"div\",{className:\"message-top\"},i.a.createElement(\"span\",{className:\"client-name\"},this.props.message.name),i.a.createElement(\"span\",{className:\"timestamp\"},this.props.message.timestamp)),i.a.createElement(\"div\",{className:\"message-text\"},this.props.message.text))}}]),e}(a.Component)),h=(n(18),function(t){function e(){return Object(r.a)(this,e),Object(l.a)(this,Object(p.a)(e).apply(this,arguments))}return Object(d.a)(e,t),Object(m.a)(e,[{key:\"render\",value:function(){return i.a.createElement(\"div\",{id:\"init\"},i.a.createElement(\"form\",{onSubmit:this.props.participantSubmit},i.a.createElement(\"input\",{type:\"text\",placeholder:\"Enter name here...\",id:\"participant-form\"})))}}]),e}(a.Component)),b=(n(19),n(20),null),f=function(t){function e(t){var n;return Object(r.a)(this,e),(n=Object(l.a)(this,Object(p.a)(e).call(this,t))).state={init:!0,participants:[],messages:[],name:\"\"},n.participantSubmit=n.participantSubmit.bind(Object(u.a)(n)),n.textSubmit=n.textSubmit.bind(Object(u.a)(n)),n}return Object(d.a)(e,t),Object(m.a)(e,[{key:\"participantSubmit\",value:function(t){t.preventDefault();var e=document.getElementById(\"participant-form\").value;if(\"\"!==e){var n=document.location.host,a=\"\".concat(document.location.protocol.replace(\"http\",\"ws\"),\"//\").concat(n,\"/ws?name=\").concat(e);(b=new WebSocket(a)).onopen=function(t){console.log(\"Opened socket\")},b.onerror=function(t){console.log(t)},this.setState({init:!1,name:e,participants:[]})}}},{key:\"textSubmit\",value:function(t){t.preventDefault();var e=document.getElementById(\"text-entry-input\").value;\"\"!==e&&(b.send(JSON.stringify({text:e,name:this.state.name,timestamp:(new Date).toLocaleTimeString()})),document.getElementById(\"text-entry-input\").value=\"\")}},{key:\"componentDidUpdate\",value:function(){var t=this;this.state.init||(document.getElementById(\"conversation-main\").scrollTop=document.getElementById(\"conversation-main\").scrollHeight,console.log(\"componentDidUpdate\"),b.onmessage=function(e){console.log(e);var n=JSON.parse(e.data);if(console.log(n),n.text){var a=n.text,i=n.name,c=n.timestamp;t.setState({messages:[].concat(Object(s.a)(t.state.messages),[{text:a,name:i,timestamp:c}])})}else t.setState({participants:n})})}},{key:\"render\",value:function(){return i.a.createElement(\"div\",{id:\"main\"},i.a.createElement(\"div\",{id:\"title\"},\"Chat Tool\"),this.state.init&&i.a.createElement(\"div\",{id:\"box-init\"},i.a.createElement(h,{participantSubmit:this.participantSubmit})),!this.state.init&&i.a.createElement(\"div\",{id:\"box-main\"},i.a.createElement(\"div\",{style:{width:\"100%\",height:\"100%\"}},i.a.createElement(\"div\",{id:\"top\"},i.a.createElement(\"div\",{id:\"participants-main\"},i.a.createElement(\"b\",null,\"Participants (\".concat(this.state.participants.length,\"):\")),this.state.participants.map(function(t){return i.a.createElement(\"div\",null,t)})),i.a.createElement(\"div\",{id:\"conversation-main\"},this.state.messages.map(function(t){return i.a.createElement(v,{message:t})}))),i.a.createElement(\"div\",{id:\"bottom\"},i.a.createElement(\"div\",{id:\"text-entry-main\"},i.a.createElement(\"form\",{onSubmit:this.textSubmit,id:\"text-entry-form\"},i.a.createElement(\"input\",{type:\"text\",id:\"text-entry-input\"})))))))}}]),e}(a.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));o.a.render(i.a.createElement(f,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(t){t.unregister()})}],[[10,1,2]]]);","extractedComments":[]}